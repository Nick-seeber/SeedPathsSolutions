@model eCommerce.Models.Order

@{
    ViewBag.Title = "Review";
}

<h2>Review</h2>

<div>
    <h3>Your Order</h3>
    @foreach (var item in Model.OrderLines)
    {
        <div>
            @item.Product.Name
            @item.UnitPrice.ToString("c") * @item.Quantity = @((item.UnitPrice * item.Quantity).ToString("c"))
        </div>
    }
    <div>
        Sub Total: @(Model.OrderLines.Sum(x=> x.Quantity * x.UnitPrice).ToString("c"))
        <br />
        Tax: @((Model.OrderLines.Sum(x=> x.Quantity * x.UnitPrice) * 0.05m).ToString("c"))
        <br />
        Total: @(((Model.OrderLines.Sum(x=> x.Quantity * x.UnitPrice) * 0.05m) + (Model.OrderLines.Sum(x=> x.Quantity * x.UnitPrice))).ToString("c"))
    </div>

    <div>
        <h3>Shipping Address</h3>
            @Model.ShippingAddress.Name
            <br />
            @Model.ShippingAddress.Address1
            <br />
            @if (!string.IsNullOrEmpty(Model.ShippingAddress.Address2)) {
                @Model.ShippingAddress.Address2
                <br />
            }
            @Model.ShippingAddress.City @Model.ShippingAddress.State @Model.ShippingAddress.PostalCode
    </div>

    <div>
        <h3>Billing Address</h3>
            @Model.BillingAddress.Name
            <br />
            @Model.BillingAddress.Address1
            <br />
            @if (!string.IsNullOrEmpty(Model.BillingAddress.Address2)) {
                @Model.BillingAddress.Address2
                <br />
            }
            @Model.BillingAddress.City @Model.BillingAddress.State @Model.BillingAddress.PostalCode
    </div>

    <div>
        <h3>Payment</h3>
        @Model.Payment.CCNumber<br />
        Security Code: @Model.Payment.CVV
        <br />
        Expiration: @Model.Payment.ExpiryMonth / @Model.Payment.ExpiryYear
    </div>
</div>